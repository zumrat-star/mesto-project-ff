{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/cards.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const initialCards = [\n    {\n      name: \"Архыз\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n    },\n    {\n      name: \"Челябинская область\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n    },\n    {\n      name: \"Иваново\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n    },\n    {\n      name: \"Камчатка\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n    },\n    {\n      name: \"Холмогорский район\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n    },\n    {\n      name: \"Байкал\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n    }\n];\n","// Функции управления попапами\nconst openPopup = (popup) => {\n  popup.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", handleEscape);\n  popup.addEventListener(\"mousedown\", handleOverlay);\n};\n\nconst closePopup = (popup) => {\n  popup.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", handleEscape);\n  popup.removeEventListener(\"mousedown\", handleOverlay);\n};\n\n// Закрытие по Esc\nconst handleEscape = (evt) => {\n  if (evt.key === \"Escape\") {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    closePopup(openedPopup);\n  }\n};\n\n// Закрытие по клику на оверлей\nconst handleOverlay = (evt) => {\n  if (evt.target === evt.currentTarget) {\n    closePopup(evt.currentTarget);\n  }\n};\n\nexport { openPopup, closePopup, handleEscape, handleOverlay };\n","// @todo: Темплейт карточки\nconst cardTemplate = document.querySelector(\"#card-template\").content;\n// @todo: Функция создания карточки\nconst createCard = (options) => {\n  const { cardData, deleteCallback, likeCallback, imageClickCallback } =\n    options;\n\n  const cardElement = cardTemplate.cloneNode(true).querySelector(\".card\");\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n\n  cardImage.src = cardData.link;\n  cardTitle.textContent = cardData.name;\n  cardImage.alt = cardData.name;\n\n  // Обработчики событий\n  likeButton.addEventListener(\"click\", likeCallback);\n  deleteButton.addEventListener(\"click\", () => deleteCallback(cardElement));\n  cardImage.addEventListener(\"click\", () => imageClickCallback(cardData));\n\n  return cardElement;\n};\n\n//функция обработчик лайка\nconst handleLikeClick = (evt) => {\n  evt.currentTarget.classList.toggle(\"card__like-button_is-active\");\n};\n//Функция удаления карточки\nconst deleteCard = (cardElement) => {\n  cardElement.remove();\n};\n\nexport { createCard, deleteCard, handleLikeClick };\n","import \"./pages/index.css\";\nimport { initialCards } from \"./scripts/cards.js\";\nimport {\n  openPopup,\n  closePopup,\n  handleEscape,\n  handleOverlay,\n} from \"./components/modal.js\";\nimport { createCard, deleteCard, handleLikeClick } from \"./components/card.js\";\n\n// DOM элементы\nconst placesList = document.querySelector(\".places__list\");\nconst imagePopup = document.querySelector(\".popup_type_image\");\nconst popupImage = imagePopup.querySelector(\".popup__image\");\nconst popupCaption = imagePopup.querySelector(\".popup__caption\");\n\n// Функция открытия попапа с изображением\nconst openImagePopup = (cardData) => {\n  popupImage.src = cardData.link;\n  popupImage.alt = cardData.name;\n  popupCaption.textContent = cardData.name;\n  openPopup(imagePopup);\n};\n\n// Вывод карточек на страницу\ninitialCards.forEach((cardData) => {\n  const newCard = createCard({\n    cardData,\n    deleteCallback: deleteCard,\n    likeCallback: handleLikeClick,\n    imageClickCallback: openImagePopup,\n  });\n  placesList.append(newCard);\n});\n\n// Редактирование профиля\nconst profileName = document.querySelector(\".profile__title\");\nconst profileJob = document.querySelector(\".profile__description\");\nconst editForm = document.forms[\"edit-profile\"];\nconst nameInput = editForm.querySelector(\".popup__input_type_name\");\nconst jobInput = editForm.querySelector(\".popup__input_type_description\");\nconst editPopup = document.querySelector(\".popup_type_edit\");\n\n// Функция открытия попапа редактирования\nconst openEditPopup = () => {\n  nameInput.value = profileName.textContent;\n  jobInput.value = profileJob.textContent;\n  openPopup(editPopup);\n};\n\n// Функция сохранения профиля\nconst handleProfileFormSubmit = (evt) => {\n  evt.preventDefault();\n  profileName.textContent = nameInput.value;\n  profileJob.textContent = jobInput.value;\n  closePopup(editPopup);\n};\n\n// Добавление новых карточек\nconst cardForm = document.forms[\"new-place\"];\nconst newCardPopup = document.querySelector(\".popup_type_new-card\");\n\nconst handleCardFormSubmit = (evt) => {\n  evt.preventDefault();\n\n  const cardData = {\n    name: cardForm.elements[\"place-name\"].value,\n    link: cardForm.elements.link.value,\n  };\n\n  const newCard = createCard({\n    cardData,\n    deleteCallback: deleteCard,\n    likeCallback: handleLikeClick,\n    imageClickCallback: openImagePopup,\n  });\n\n  placesList.prepend(newCard);\n  closePopup(newCardPopup);\n  cardForm.reset();\n};\n\n// Инициализация попапов\nconst setupPopups = () => {\n  document.querySelectorAll(\".popup__close\").forEach((button) => {\n    const popup = button.closest(\".popup\");\n    button.addEventListener(\"click\", () => closePopup(popup));\n  });\n\n  // Открытие попапа редактирования\n  document\n    .querySelector(\".profile__edit-button\")\n    .addEventListener(\"click\", openEditPopup);\n\n  // Открытие попапа добавления карточки\n  document\n    .querySelector(\".profile__add-button\")\n    .addEventListener(\"click\", () => {\n      openPopup(newCardPopup);\n    });\n\n  // Обработчики форм\n  editForm.addEventListener(\"submit\", handleProfileFormSubmit);\n  cardForm.addEventListener(\"submit\", handleCardFormSubmit);\n};\n\n// Инициализация при загрузке страницы\ndocument.addEventListener(\"DOMContentLoaded\", setupPopups);\n"],"names":["openPopup","popup","classList","add","document","addEventListener","handleEscape","handleOverlay","closePopup","remove","removeEventListener","evt","key","openedPopup","querySelector","target","currentTarget","cardTemplate","content","createCard","options","cardData","deleteCallback","likeCallback","imageClickCallback","cardElement","cloneNode","cardImage","cardTitle","deleteButton","likeButton","src","link","textContent","name","alt","handleLikeClick","toggle","deleteCard","placesList","imagePopup","popupImage","popupCaption","openImagePopup","forEach","newCard","append","profileName","profileJob","editForm","forms","nameInput","jobInput","editPopup","openEditPopup","value","handleProfileFormSubmit","preventDefault","cardForm","newCardPopup","handleCardFormSubmit","elements","prepend","reset","querySelectorAll","button","closest"],"sourceRoot":""}